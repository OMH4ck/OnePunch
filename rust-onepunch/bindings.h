#ifndef RUST_ONEPUNCH_H
#define RUST_ONEPUNCH_H

/* Generated with cbindgen:0.24.5 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef enum RustRegType {
  RUST_REG_TYPE_REG_NONE = 0,
  RUST_REG_TYPE_REG64_START,
  RUST_REG_TYPE_REG_RAX,
  RUST_REG_TYPE_REG_RCX,
  RUST_REG_TYPE_REG_RDX,
  RUST_REG_TYPE_REG_RBX,
  RUST_REG_TYPE_REG_RSI,
  RUST_REG_TYPE_REG_RDI,
  RUST_REG_TYPE_REG_RSP,
  RUST_REG_TYPE_REG_RBP,
  RUST_REG_TYPE_REG_R8,
  RUST_REG_TYPE_REG_R9,
  RUST_REG_TYPE_REG_R10,
  RUST_REG_TYPE_REG_R11,
  RUST_REG_TYPE_REG_R12,
  RUST_REG_TYPE_REG_R13,
  RUST_REG_TYPE_REG_R14,
  RUST_REG_TYPE_REG_R15,
  RUST_REG_TYPE_REG_RIP,
} RustRegType;

typedef enum RustValueType {
  RUST_VALUE_TYPE_CALL_VALUE = 0,
  RUST_VALUE_TYPE_MEM_VALUE,
  RUST_VALUE_TYPE_CALL_REG_VALUE,
  RUST_VALUE_TYPE_IMM_VALUE,
  RUST_VALUE_TYPE_OTHER_VALUE,
} RustValueType;

typedef struct RustMemory RustMemory;

typedef struct RustValue {
  enum RustValueType value_type;
  long value;
} RustValue;

typedef struct RustRegister {
  enum RustRegType name;
  struct RustMemory *memory;
  long base_offset;
  char *input_src;
  long input_offset;
  unsigned char input_action;
} RustRegister;

struct RustValue *rust_value_new(enum RustValueType value_type, long value);

void rust_value_free(struct RustValue *value);

struct RustMemory *rust_memory_new(void);

void rust_memory_free(struct RustMemory *memory);

void rust_memory_increase_ref_count(struct RustMemory *memory);

void rust_memory_decrease_ref_count(struct RustMemory *memory);

unsigned char rust_memory_contain_range(const struct RustMemory *memory, long start, long end);

unsigned char rust_memory_remove_range(struct RustMemory *memory, long start, long end);

void rust_memory_set_content(struct RustMemory *memory, long offset, const struct RustValue *value);

struct RustRegister *rust_register_new(unsigned char alloc_mem);

void rust_register_free(struct RustRegister *register_);

void rust_register_alias(struct RustRegister *register_,
                         const struct RustRegister *other,
                         unsigned char copy_mem);

void rust_register_set_name(struct RustRegister *register_, enum RustRegType name);

enum RustRegType rust_register_get_name(const struct RustRegister *register_);

#endif /* RUST_ONEPUNCH_H */
